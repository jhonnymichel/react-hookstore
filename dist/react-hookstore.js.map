{"version":3,"sources":["webpack://hookStore/webpack/universalModuleDefinition","webpack://hookStore/webpack/bootstrap","webpack://hookStore/external {\"commonjs\":\"react\",\"commonjs2\":\"react\",\"amd\":\"React\",\"root\":\"React\"}","webpack://hookStore/./src/index.js"],"names":["stores","subscriptions","defaultReducer","state","payload","defaultMemoFn","StoreInterface","name","store","useReducer","dispatch","setState","getState","subscribe","bind","callback","find","c","console","warn","push","filter","data","getStoreByIdentifier","identifier","createStore","reducer","isPrimitiveStateWithoutReducerAndIsPreviousState","currentState","newState","updatersPerMemoFunction","forEach","updaters","memoFn","prevResult","newResult","updateComponent","length","Map","set","Set","Object","assign","public","getStoreByName","e","useStore","useState","useEffect","has","get","add","delete","size"],"mappings":"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","file":"react-hookstore.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"React\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"hookStore\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"hookStore\"] = factory(root[\"React\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE__0__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","import { useState, useEffect } from 'react';\n\nlet stores = {};\nlet subscriptions = {};\n\nconst defaultReducer = (state, payload) => payload;\nconst defaultMemoFn = (state) => state;\n\n/** The public interface of a store */\nclass StoreInterface {\n  constructor(name, store, useReducer) {\n    this.name = name;\n    useReducer ?\n      this.dispatch = store.setState : this.setState = store.setState;\n    this.getState = () => store.state;\n    this.subscribe = this.subscribe.bind(this);\n  }\n\n  /**\n   * Subscribe to store changes\n   * @param {(state:any, data:any) => void} callback - The function to be invoked everytime the store is updated\n   * @return {Function} - Call the function returned by the method to cancel the subscription\n   */\n  subscribe(callback) {\n    if (!callback || typeof callback !== 'function') {\n      throw `store.subscribe callback argument must be a function. got '${typeof callback}' instead.`;\n    }\n    if (subscriptions[this.name].find(c => c === callback)) {\n      console.warn('This callback is already subscribed to this store. skipping subscription');\n      return;\n    }\n    subscriptions[this.name].push(callback);\n    return () => {\n      subscriptions[this.name] = subscriptions[this.name].filter(c => c !== callback);\n    }\n  }\n\n  /**\n   * Set the store state\n   * @param {any} data - The new state value.\n   */\n  setState(data) {\n    console.warn(`[React Hookstore] Store ${this.name} uses a reducer to handle its state updates. use dispatch instead of setState`)\n  }\n  /**\n   * Dispatch data to the store reducer\n   * @param {any} data - The data payload the reducer receives\n   */\n  dispatch(data) {\n    console.warn(`[React Hookstore] Store ${this.name} does not use a reducer to handle state updates. use setState instead of dispatch`)\n  }\n}\n\nfunction getStoreByIdentifier(identifier) {\n  const name = identifier instanceof StoreInterface ? identifier.name : identifier;\n  if (!stores[name]) {\n    throw `Store with name ${name} does not exist`;\n  }\n  return stores[name];\n}\n\n/**\n * Creates a new store\n * @param {String} name - The store namespace.\n * @param {*} state [{}] - The store initial state. It can be of any type.\n * @param {(state:any, data:any) => any} reducer [null] - The reducer handler. Optional\n * @returns {StoreInterface} The store instance.\n */\nexport function createStore(name, state = {}, reducer=defaultReducer) {\n  if (typeof name !== 'string') {\n    throw 'Store name must be a string';\n  }\n  if (stores[name]) {\n    throw `Store with name ${name} already exists`;\n  }\n  \n\n  const store = {\n    state,\n    reducer,\n    setState(data, callback) {\n      const isPrimitiveStateWithoutReducerAndIsPreviousState =\n        this.reducer === defaultReducer\n          && data === this.state\n          && typeof data !== 'object';\n\n      if (isPrimitiveStateWithoutReducerAndIsPreviousState) {\n        if (typeof callback === 'function') callback(this.state)\n        return;\n      }\n\n      const currentState = this.state;\n      const newState = this.reducer(this.state, data);\n      this.state = newState;\n\n      this.updatersPerMemoFunction.forEach((updaters, memoFn) => {\n        const prevResult = memoFn(currentState);\n        const newResult = memoFn(newState);\n        if (prevResult === newResult) {\n          return;\n        }\n        for (let updateComponent of updaters) {\n          updateComponent(this.state);\n        }\n      });\n\n      if (subscriptions[name].length) {\n        subscriptions[name].forEach(c => c(this.state, data));\n      }\n\n      if (typeof callback === 'function') callback(this.state)\n    },\n    updatersPerMemoFunction: new Map(),\n  };\n\n  store.setState = store.setState.bind(store);\n  store.updatersPerMemoFunction.set(defaultMemoFn, new Set())\n  stores = Object.assign({}, stores, { [name]: store });\n  subscriptions[name] = [];\n\n  store.public = new StoreInterface(name, store, reducer !== defaultReducer);\n  return store.public;\n}\n\n/**\n * Returns a store instance based on its name\n * @name {String} name - The name of the wanted store\n * @returns {StoreInterface} the store instance\n */\nexport function getStoreByName(name) {\n  try {\n    return stores[name].public;\n  } catch(e) {\n    throw `Store with name ${name} does not exist`;\n  }\n}\n\n/**\n * Returns a [ state, setState ] pair for the selected store. Can only be called within React Components\n * @param {String|StoreInterface} identifier - The identifier for the wanted store\n * @param {(state:any) => any} memoFn [state => state] - A memoization function to optimize component rerender. Receive the store state and return a subset of it. The component will only rerender when the subset changes.\n * @returns {Array} the [state, setState] pair.\n */\nexport function useStore(identifier, memoFn=defaultMemoFn) {\n  const store = getStoreByIdentifier(identifier);\n  if (!store) {\n    throw 'store does not exist';\n  }\n  if (typeof memoFn !== 'function') {\n    throw 'memoFn must be a function';\n  }\n\n  const [ state, set ] = useState(store.state);\n\n  useEffect(() => {\n    if (!store.updatersPerMemoFunction.has(memoFn)) {\n      store.updatersPerMemoFunction.set(memoFn, new Set());\n    }\n  \n    const updatersPerMemoFunction = store.updatersPerMemoFunction.get(memoFn);\n\n    if (!updatersPerMemoFunction.has(set)) {\n      updatersPerMemoFunction.add(set);\n    }\n\n    return () => {\n      updatersPerMemoFunction.delete(set);\n      if (!updatersPerMemoFunction.size) {\n        store.updatersPerMemoFunction.delete(memoFn);\n      }\n    }\n  }, [])\n\n  return [ state, store.setState];\n}\n"],"sourceRoot":""}